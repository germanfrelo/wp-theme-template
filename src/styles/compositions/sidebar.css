/* ======================================================================
Title:       Sidebar
Description: A layout for placing two elements side-by-side. If space permits, the sidebar element has a set width, and the companion takes up the rest of the available horizontal space. If not, the elements are collapsed into a single column, each taking up 100% of the horizontal space.
References:
- https://every-layout.dev/layouts/sidebar/
- https://piccalil.li/blog/a-revisit-of-the-every-layout-sidebar-with-has-and-selector-performance/
Usage:
Use either 'with-sidebar-left' or 'with-sidebar-right'.
---
Variables:

--sidebar-flex-wrap
	Description: The 'flex-wrap' value.
	Type:        A valid 'flex-wrap' value, except 'nowrap' because the elements wouldn't wrap.
	Default:     wrap

--sidebar-gap
	Description: The gap between the two elements.
	Type:        A valid 'gap' value.
	Default:     var(--gutter, 1em)

--sidebar-size
	Description: How large the sidebar should be before wrapping.
	Type:        A valid 'flex-basis' value, except a percentage.
	Default:     auto

--sidebar-vertical-alignment
	Description: The block size (height) of the two adjacent elements.
	Type:        A valid 'align-items' value.
	Default:     stretch

--sidebar-wrap-at
	Description: The narrowest the content (non-sidebar) element can be before wrapping.
	Type:        A percentage value, relative to the container's inline size.
	Default:     50% (wrap when the elements are of equal width)
====================================================================== */

.with-sidebar-left,
.with-sidebar-right {
	display: flex;
	flex-wrap: var(--sidebar-flex-wrap, wrap);
	gap: var(--sidebar-gap, var(--gutter, 1em));
	align-items: var(--sidebar-vertical-alignment, stretch);

	> * {
		margin: 0;
	}

	/* WP - For the block editor */
	&.is-layout-flow > * {
		margin: 0;
	}
}

.with-sidebar-left > :nth-child(1),
.with-sidebar-right > :nth-child(2) {
	flex-grow: 1;
	flex-basis: var(--sidebar-size, auto);
}

.with-sidebar-left > :nth-child(2),
.with-sidebar-right > :nth-child(1) {
	flex-grow: 999;
	flex-basis: var(--sidebar-wrap-at, 50%);
}

/* Layout testing */

:is(.with-sidebar-left, .with-sidebar-right) > :not(:nth-child(1), :nth-child(2)) {
	--error: "Sidebar layouts must include exactly two child elements.";
	outline: var(--outline-error);
}
