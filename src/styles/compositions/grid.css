/* ======================================================================
Title:       Grid
Description: A layout for creating a responsive grid with configurable grid item sizes.
Reference:   https://piccalil.li/tutorial/create-a-responsive-grid-layout-with-no-media-queries-using-css-grid/
---
Variables:

--grid-gap
	Description: The space between each item.
	Type:        A valid 'gap' value.
	Default:     var(--gutter, 1em)

--grid-min-item-size
	Description: How large each item should be ideally, as a minimum.
	Type:        A valid '<length>' value.
	Default:     16rem

--grid-placement
	Description: Set either 'auto-fit' or 'auto-fill' to change how empty grid tracks are handled.
	Type:        A 'grid-template-columns' keyword ('auto-fit' or 'auto-fill').
	Default:     auto-fill
====================================================================== */

.grid {
	display: grid;
	grid-template-columns: repeat(
		var(--grid-placement, auto-fill),
		minmax(min(100%, var(--grid-min-item-size, 16rem)), 1fr)
	);
	gap: var(--grid-gap, var(--gutter, 1em));

	/* A split 50/50 layout */
	&:where([data-layout="halves"], .grid--halves) {
		--grid-placement: auto-fit;
		--grid-min-item-size: clamp(16rem, 50vw, 33rem);
	}

	/* Three column grid layout */
	&:where([data-layout="thirds"], .grid--thirds) {
		--grid-placement: auto-fit;
		--grid-min-item-size: clamp(16rem, 33%, 20rem);
	}

	> * {
		margin: 0;
	}

	/* WP - For the block editor */
	&.is-layout-flow > * {
		margin: 0;
	}
}
