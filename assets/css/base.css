/* Global
================================================== */

/*
1. Use the more intuitive and predictable border box sizing by default. (refs. https://github.com/jensimmons/cssremedy/issues/4 and https://wiki.csswg.org/ideas/mistakes).
2. Don't repeat background images by default (ref. https://github.com/w3c/csswg-drafts/issues/4526).
3. Don't repeat mask images by default.
*/

*,
::before,
::after {
	box-sizing: border-box; /* 1 */
	background-repeat: no-repeat; /* 2 */
	-webkit-mask-repeat: no-repeat; /* 3 */
	mask-repeat: no-repeat; /* 3 */
}

/*
Revert adding 'background-repeat: no-repeat' to some form elements because it disables their native appearance in WebKit (bug: https://bugs.webkit.org/show_bug.cgi?id=117128#c2).
*/

:where(button, input, meter, progress, select) {
	background-repeat: revert;
}

/*
1. A prerequisite for the 'body' to be able to fill the viewport height (requires 'body { min-block-size: 100%; }', see 'body' rule below). Ref. https://codepen.io/germanfrelo/pen/jOGNpbj
2. Break words when there is not enough space to prevent text overflow.
3. Use a shorter, more readable tab size (default is 8).
4. Prevent WebKit-based browsers on iOS from automatically increasing the default font size in landscape orientation (demo: https://codepen.io/germanfrelo/pen/JoPJVxd).
*/

html {
	block-size: 100%; /* 1 */
	overflow-wrap: break-word; /* 2 */
	tab-size: 4; /* 3 */
	-webkit-text-size-adjust: none; /* 4 */ /* stylelint-disable-line property-no-vendor-prefix -- Intended. */
}

/*
1. Smooth scrolling, but only when focused in the page to prevent unnaturally scrolling when tabbing though the results of a search.
2. When users prefer reduced motion, remove timed scrolling behaviors.
*/

/* 1 */
html:focus-within {
	scroll-behavior: smooth;
}

/* 2 */
@media (prefers-reduced-motion: reduce) {
	html:focus-within {
		scroll-behavior: auto;
	}
}

/*
When scrolling to target elements, a reasonable spacing is added above them to ensure they remain visible, especially with sticky headers or similar. Adjust as needed.
Reference: https://piccalil.li/blog/a-more-modern-css-reset/
*/

:target {
	scroll-margin-block-start: 5em;
}

/* Page
================================================== */

/*
Makes 'body' at least as tall as the viewport height (requires 'html { block-size: 100%; }', see 'html' rule above). Reference: https://codepen.io/germanfrelo/pen/jOGNpbj
*/

body {
	min-block-size: 100%;
}

/* Headings
================================================== */

/*
Prevent the 'font-size' and 'margin' of 'h1' from decreasing when nested inside sectioning elements ('article', 'aside', 'nav', 'section') (refs. https://github.com/jensimmons/cssremedy/issues/2 and https://github.com/whatwg/html/issues/7867).
*/

:where(h1) {
	margin-block: 0.67em;
	font-size: 2em;
}

/* Grouping content
================================================== */

/*
1. Fix the inheritance and scaling of the font size in all browsers.
2. Fix the odd 'em' font sizing in all browsers.
*/

pre {
	font-family: monospace, monospace; /* 1 */ /* stylelint-disable-line font-family-no-duplicate-names -- See https://github.com/necolas/normalize.css/issues/519#issuecomment-197131966 */
	font-size: 1em; /* 2 */
}

/* Text-level semantics
================================================== */

/*
1. Fix the inheritance and scaling of the font size in all browsers.
2. Fix the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp {
	font-family: monospace, monospace; /* 1 */ /* stylelint-disable-line font-family-no-duplicate-names -- See https://github.com/necolas/normalize.css/issues/519#issuecomment-197131966 */
	font-size: 1em; /* 2 */
}

/* Embedded content
================================================== */

/*
1. Block by default is usually what we want/the most common use case (default is 'inline').
2. Responsive by default to prevent them from growing beyond the container.
*/

audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
	display: block; /* 1 */
	max-inline-size: 100%; /* 2 */
}

/*
Revert the display block for 'img' and 'svg' nested in certain elements where they are likely to be used as inline.
*/

:where(a, button, cite, h1, h2, h3, h4, h5, h6, li, p, td, th) > :is(img, svg) {
	display: revert;
	vertical-align: middle;
}

/*
Maintain intrinsic aspect ratios when 'max-inline-size' is applied ('embed', 'iframe' and 'object' have no intrinsic ratio, so their 'block-size' needs to be set explicitly).
*/

canvas,
img,
svg,
video {
	block-size: auto;
}

/* Tabular data
================================================== */

/*
1. Ensure numbers line up (ref: https://github.com/jensimmons/cssremedy/issues/39#issuecomment-473012250)
2. Prevent double borders.
3. Fix the default table 'border-color: gray' on Chrome (bug: https://issues.chromium.org/issues/40615503).
*/

table {
	font-variant-numeric: tabular-nums; /* 1 */
	border-collapse: collapse; /* 2 */
	border-color: currentcolor; /* 3 */
}

/*
Make 'th' alignment (default is 'center') consistent with 'td' alignment.
*/

th {
	text-align: inherit;
}

/*
Add paddings and borders to table cells.
*/

:where(th, td) {
	padding-block: 0.25em;
	padding-inline: 0.5rem;
	border: 1px solid;
}

/* Forms
================================================== */

/*
1. Remove the default 2px 'margin-inline' from 'fieldset', which is usually not wanted, in favor of better control in authored CSS.
2. Change the default 'fieldset' border appearance.
*/

fieldset {
	margin-inline: 0; /* 1 */
	border: 1px solid; /* 2 */
}

/*
1. Responsive by default by restricting sizing to the page width.
2. Add typography inheritance ('line-height' is reverted to avoid removing their native appearance in WebKit).
3. Add color inheritance.
*/

button,
input,
select,
textarea {
	max-inline-size: 100%; /* 1 */
	font: inherit; /* 2 */
	line-height: revert; /* 2 */
	color: inherit; /* 3 */
	word-spacing: inherit; /* 2 */
	letter-spacing: inherit; /* 2 */
}

/*
Remove Firefox's default 1px 'margin-block' from 'textarea' for consistency across browsers (bug: https://bugzilla.mozilla.org/show_bug.cgi?id=73817).
*/

textarea {
	margin-block: 0;
}

/*
Remove the default margin from some form elements, which is usually not wanted, in favor of better control in authored CSS.
*/

input[type="checkbox" i],
input[type="radio" i],
input[type="range" i] {
	margin: 0;
}

/*
1. Normalizes the placeholder color with a new default value that is consistent and accessible across browsers (reference: https://codepen.io/germanfrelo/pen/EaYwZdb)
2. Sets a more modern alternative that provides a value for dark color schemes of browsers that is also accesible across the different background colors for dark themes of browsers.
*/

::placeholder {
	color: #757575;
}

@supports (color: light-dark(black, white)) {
	::placeholder {
		color: light-dark(hsl(0deg 0% 46%), hsl(0deg 0% 65%));
	}
}

/*
1. Set a consistent margin across browsers.
2. Change font properties to 'inherit' in WebKit.
*/

::file-selector-button {
	margin-inline-end: 1ch; /* 1 */
	font: inherit; /* 2 */
}

/* Cursor
================================================== */

/*
Set the cursor for 'summary' to be the same as buttons by default, so they feel more interactive.
Use the same default cursor used for buttons to make it feel interactive (default is 'text').
*/

:where(details > summary:first-of-type) {
	cursor: default;
}
